<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="exerciseBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAPVSURBVHhe7ZtNaBNBFMe3Hqwb9aCUnhT05NmCgh9gELSI
        0k3FWhGsd7HWS5sFQUHQKtKbtxbstaFQQS966THpscW0lqKVttqLH/Hjvs7bvBcn49tNJmkzsc4ffmSz
        8/bNe//dGWjSOFZWVlaboTdOz/asm3qcdb1PuUQqiOBjzk09gli8bOsou+viE6ZhFojFy7aOcm29P7lm
        Wdou/8LLto7YRmPAy5pTO7w7+xMpf9JN+T/Ea8Bx+kR/8HJPD9ucDi/2XgqSJ/vZOYBiDemp3V2Dh7C8
        UInu9Hlxfu2vazx/NZEaOodh+oLmXc//8ldihdftvWxDtfCq/Qo7h4ww4ivUhmU6xUb5WGHMCobpSySY
        hCRd98aCt8trQaFQYKHiJ7YdFnSUNVQN6nXcHMDC8mpw4e5osTHPz2CZUKfSdDkYpi967Bfer7AFEX8a
        6Qgyohl6Xy3qddwcxPy7lbApN5X+jmVungGUgCtEZuZAX1lD9TBz8Do7h4zaGL2PAsP0RQm4ImRmR6c2
        xARofnbsOTuHjNoYvY8Cw/RFCbgiZNbX14N8Ph/Mzc3VBeSAXNwcMmpjXIwMhumrWgMajTVAMYBbTjIY
        pi9rQAUDTg0+LRVDJMU5LjYO3TwUg2WaM4DGVbjYOLgcABcL0DiWaQ3gmpbBMH1VW4gKFxsHlwPgYgEa
        xzIbbwCsWafjaqkQFTW+ElwOAObg9oLSOIprWgbD9EUTcQU0ygB4jYrHMpvPAOd+JnDGc9UhYrkcgDXA
        GmANCF+5+cNxFNe0DIbpiybiCogzgPtLLw4uB9C0Bhy7NRJrgBpfCS4HAHMcHxiJjMcyG2/A4uJi7J1T
        4yvB5QBgDpgrKh7LbLwBBI2rcLFxcDkALhagcSzTGsA1LYNh+qpUCOwFFENwa7YSunkoBss0ZwDtBTLc
        mq2Ebp6mMcAU1gDTBtDH4NV+jL3RGDdA/g4Ajuk8t5brhdsLrAGmDfjvl4BpjBtgN0HROK1ROKbzdhO0
        m2BjMG6AaYwbYDdB0TitUTim83YTtJtgYzBugGmMG9BsT0AhNz4tCCKYxjB9RRkAjdMahWM6b2oP+JZ9
        lmQaD4ExDNPXv2IASDTLPQW1331QlAHNtgRA3FNQ190H0T9Lzy99YAsxQX5pOWze9fwCllmSqHeazIFj
        PF274McJkOzszeGmMAGaP3NjuPgEeP4EllnSTi+dJAPgGE/XLvhlBvw4obXzdtBy9Fr4ZaVJWo70Ba2d
        A+Lupz+73UP7sMwyibGHouYH+LZ+hT+Z8fwM/H8+uWuKsAZx56Oat7KysqpejvMbjaP69pDoyywAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>